{"ast":null,"code":"var _jsxFileName = \"/Users/learn/Desktop/tic-tac-toe/src/components/Board.js\";\nimport React, { Component } from 'react';\nimport Square from './Square';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props); //define the array1 array that the user start with\n\n    this.handleLocation = index => {\n      let {\n        array1,\n        array2,\n        userStatus\n      } = this.state;\n    };\n\n    this.resetGame = () => {\n      let {\n        array1,\n        array2,\n        counter\n      } = this.state;\n      array1 = array1.map(value => value = \"\");\n      array2 = array2.map(value => value = \"\");\n      this.setState({\n        array1: array1,\n        array2: array2\n      });\n    };\n\n    this.userSelect = () => {//write code here\n    };\n\n    this.state = {\n      array1: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      array2: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      userStatus: \"\"\n    };\n  }\n\n  render() {\n    let {\n      array1,\n      array2,\n      counter,\n      userStatus\n    } = this.state;\n    let square = array1.map((value, index) => {\n      return React.createElement(Square, {\n        handleLocation: this.handleLocation,\n        randomize: this.randomize,\n        index: index,\n        value: value,\n        userStatus: userStatus,\n        counter: counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    });\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" Counter:\", this.state.counter), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, square, React.createElement(\"button\", {\n      onClick: this.randomize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Start Game\"), React.createElement(\"button\", {\n      onClick: this.resetGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Reset Game\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.userStatus)));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/learn/Desktop/tic-tac-toe/src/components/Board.js"],"names":["React","Component","Square","Board","constructor","props","handleLocation","index","array1","array2","userStatus","state","resetGame","counter","map","value","setState","userSelect","render","square","randomize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,SAUnBC,cAVmB,GAUDC,KAAD,IAAW;AACvB,UAAI;AAACC,QAAAA,MAAD;AAASC,QAAAA,MAAT;AAAiBC,QAAAA;AAAjB,UAA+B,KAAKC,KAAxC;AACJ,KAZkB;;AAAA,SAenBC,SAfmB,GAeP,MAAM;AACd,UAAI;AAACJ,QAAAA,MAAD;AAASC,QAAAA,MAAT;AAAiBI,QAAAA;AAAjB,UAA4B,KAAKF,KAArC;AACAH,MAAAA,MAAM,GAAGA,MAAM,CAACM,GAAP,CAAWC,KAAK,IAAIA,KAAK,GAAG,EAA5B,CAAT;AACAN,MAAAA,MAAM,GAAGA,MAAM,CAACK,GAAP,CAAWC,KAAK,IAAIA,KAAK,GAAG,EAA5B,CAAT;AACA,WAAKC,QAAL,CAAc;AACVR,QAAAA,MAAM,EAAEA,MADE;AAEVC,QAAAA,MAAM,EAAEA;AAFE,OAAd;AAIH,KAvBkB;;AAAA,SA2BnBQ,UA3BmB,GA2BN,MAAM,CAChB;AACJ,KA7BoB;;AAIb,SAAKN,KAAL,GAAa;AACTH,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,CADC;AAETC,MAAAA,MAAM,EAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,CAFE;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAKL;;AAsBHQ,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEV,MAAAA,MAAF;AAASC,MAAAA,MAAT;AAAiBI,MAAAA,OAAjB;AAA0BH,MAAAA;AAA1B,QAAyC,KAAKC,KAAlD;AACA,QAAIQ,MAAM,GAAGX,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQR,KAAR,KAAkB;AACtC,aACA,oBAAC,MAAD;AACA,QAAA,cAAc,EAAI,KAAKD,cADvB;AAEA,QAAA,SAAS,EAAI,KAAKc,SAFlB;AAGA,QAAA,KAAK,EAAKb,KAHV;AAIA,QAAA,KAAK,EAAKQ,KAJV;AAKA,QAAA,UAAU,EAAIL,UALd;AAMA,QAAA,OAAO,EAAKG,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAQK,KATI,CAAb;AAaA,WACA,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAe,KAAKF,KAAL,CAAWE,OAA1B,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGC;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIM,MADJ,EAEG;AAAQ,MAAA,OAAO,EAAI,KAAKC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFH,EAGG;AAAQ,MAAA,OAAO,EAAI,KAAKR,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWD,UAAf,CALH,CAHD,CADA;AAaD;;AA5D2B;;AA+D9B,eAAeP,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Square from './Square'\nclass Board extends Component {\n    constructor(props) {\n        super(props)\n\n        //define the array1 array that the user start with\n          this.state = {\n              array1: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n              array2:[\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n              userStatus: \"\",\n          }\n    }\n    handleLocation = (index) => {\n         let {array1, array2, userStatus} = this.state\n    }\n\n//Resetting the Game\n    resetGame = () => {\n        let {array1, array2, counter} = this.state\n        array1 = array1.map(value => value = \"\")\n        array2 = array2.map(value => value = \"\")\n        this.setState({\n            array1: array1,\n            array2: array2,\n        })\n    }\n\n\n//Decide the random bomb and treasure location once the page is loaded automatically\n    userSelect = () => {\n       //write code here\n  }\n\n  render() {\n    let { array1,array2, counter, userStatus } = this.state\n    let square = array1.map((value, index) => {\n        return (\n        <Square\n        handleLocation = {this.handleLocation}\n        randomize = {this.randomize}\n        index = { index }\n        value = { value }\n        userStatus = {userStatus}\n        counter = { counter }\n        /> )})\n\n\n\n    return (\n    <>\n    <div> Counter:{this.state.counter}</div>\n    <br/>\n     <div className = \"board\">\n        {square}\n        <button onClick = {this.randomize}> Start Game</button>\n        <button onClick = {this.resetGame}> Reset Game</button>\n        <br/>\n        <p>{this.state.userStatus}</p>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Board\n"]},"metadata":{},"sourceType":"module"}